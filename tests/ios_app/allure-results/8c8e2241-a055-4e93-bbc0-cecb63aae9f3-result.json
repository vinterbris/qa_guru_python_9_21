{"name": "test_search", "status": "broken", "statusDetails": {"message": "binascii.Error: Incorrect padding", "trace": "self = <allure_commons._allure.fixture object at 0x7bc2b9dbd6a0>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n../../.venv/lib/python3.12/site-packages/allure_commons/_allure.py:221: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:49: in mobile_management\n    attach.add_screenshot(browser)\n../../browserstack_sample_app_tests/utils/attach.py:10: in add_screenshot\n    browser.driver.get_screenshot_as_png(),\n../../.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:832: in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = b'{\"value\":{\"message\":\"Session not started or terminated\"},\"sessionId\":\"\",\"status\":13}'\naltchars = None, validate = False\n\n    def b64decode(s, altchars=None, validate=False):\n        \"\"\"Decode the Base64 encoded bytes-like object or ASCII string s.\n    \n        Optional altchars must be a bytes-like object or ASCII string of length 2\n        which specifies the alternative alphabet used instead of the '+' and '/'\n        characters.\n    \n        The result is returned as a bytes object.  A binascii.Error is raised if\n        s is incorrectly padded.\n    \n        If validate is False (the default), characters that are neither in the\n        normal base-64 alphabet nor the alternative alphabet are discarded prior\n        to the padding check.  If validate is True, these non-alphabet characters\n        in the input result in a binascii.Error.\n        For more information about the strict base64 check, see:\n    \n        https://docs.python.org/3.11/library/binascii.html#binascii.a2b_base64\n        \"\"\"\n        s = _bytes_from_decode_data(s)\n        if altchars is not None:\n            altchars = _bytes_from_decode_data(altchars)\n            assert len(altchars) == 2, repr(altchars)\n            s = s.translate(bytes.maketrans(altchars, b'+/'))\n>       return binascii.a2b_base64(s, strict_mode=validate)\nE       binascii.Error: Incorrect padding\n\n/usr/lib/python3.12/base64.py:88: Error"}, "steps": [{"name": "Нажать на поле ввода", "status": "passed", "steps": [{"name": "element('accessibility id', 'Text Button'): click", "status": "passed", "start": 1709047369248, "stop": 1709047370136}], "start": 1709047369247, "stop": 1709047370136}, {"name": "Ввести значение и подтвердить", "status": "passed", "steps": [{"name": "element('accessibility id', 'Text Input'): send keys", "status": "passed", "start": 1709047370137, "stop": 1709047372700}], "start": 1709047370137, "stop": 1709047372700}, {"name": "Проверить наличие значения в списке", "status": "passed", "steps": [{"name": "element('accessibility id', 'Text Output'): should have text Allure", "status": "passed", "start": 1709047372700, "stop": 1709047373417}], "start": 1709047372700, "stop": 1709047373417}], "start": 1709047369247, "stop": 1709047373417, "uuid": "be297be6-54f3-4797-9275-ea0f76b28e89", "historyId": "1c298a843b1e490f926e5089deafd4b0", "testCaseId": "1c298a843b1e490f926e5089deafd4b0", "fullName": "tests.ios_app.test_sample_app#test_search", "labels": [{"name": "parentSuite", "value": "tests.ios_app"}, {"name": "suite", "value": "test_sample_app"}, {"name": "host", "value": "lnx-carbon"}, {"name": "thread", "value": "303282-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ios_app.test_sample_app"}]}